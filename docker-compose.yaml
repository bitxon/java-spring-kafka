version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    healthcheck:
      test: kafka-topics --bootstrap-server broker:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    volumes:
      - ./common-dataset:/data
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c']
    command: |
      "
      echo 'Waiting for Kafka to be ready...'
      cub kafka-ready -b kafka:29092 1 30

      echo 'Creating Kafka topics...'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 3 --topic order
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic payment
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic shipment
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic invoice-request
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic invoice-response
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic invoice-dlq

      echo 'Populating Kafka topics with messages...'
      kafka-console-producer --bootstrap-server kafka:29092 --property "parse.key=true" --property "key.separator=#" --topic order < /data/orders.json
      kafka-console-producer --bootstrap-server kafka:29092 --property "parse.key=true" --property "key.separator=#" --topic payment < /data/payments.json
      kafka-console-producer --bootstrap-server kafka:29092 --property "parse.key=true" --property "key.separator=#" --topic shipment < /data/shipment.json
      kafka-console-producer --bootstrap-server kafka:29092 --property "parse.key=true" --property "key.separator=#" --topic invoice-request < /data/invoice.json
      echo 'All Done'
      "

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9000:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: 'true'